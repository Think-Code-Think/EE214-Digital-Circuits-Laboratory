library ieee;
use ieee.std_logic_1164.all;
library work;
use work.Gates.all;

entity FourbitAdderSubtractor is
port (
A:  in std_logic_vector(3 downto 0);
B:  in std_logic_vector(3 downto 0);
M: in std_logic;
 Z,P,Y: out std_logic;
 S: out std_logic_vector(4 downto 0));
end entity FourbitAdderSubtractor;

architecture Struct of FourbitAdderSubtractor is
signal I,J,K,L,C1,C2,C3 : std_logic;

component Full_adder is
port (A, B, C: in std_logic; Sum, Cout: out std_logic);
end component Full_adder;

component XOR_GATE is
port (A, B: in std_logic; Y: out std_logic);
end component XOR_GATE;

begin
  --component instances
   xor1: XOR_GATE port map(M,B0,I);
	fulladder1: Full_adder port map (A0,I,M,S0,C1);
	xor2: XOR_GATE port map(M,B1,J);
	fulladder2: Full_adder port map (A1,J,C1,S1,C2);
	xor3: XOR_GATE port map(M,B2,K);
	fulladder3: Full_adder port map (A2,K,C2,S2,C3);
	xor4: XOR_GATE port map(M,B3,L);
	fulladder4: Full_adder port map (A3,L,C3,S3,Cout);
  
  end Struct;