|DUT
input_vector[0] => Fibonacci_detector:add_instance.x0
input_vector[1] => Fibonacci_detector:add_instance.x1
input_vector[2] => Fibonacci_detector:add_instance.x2
input_vector[3] => Fibonacci_detector:add_instance.x3
input_vector[4] => Fibonacci_detector:add_instance.x4
output_vector[0] << Fibonacci_detector:add_instance.Y


|DUT|Fibonacci_detector:add_instance
x4 => INVERTER:NOT1.A
x3 => INVERTER:NOT2.A
x2 => INVERTER:NOT3.A
x2 => AND_4:AND3.B
x2 => AND_4:AND4.B
x1 => INVERTER:NOT4.A
x0 => INVERTER:NOT5.A
x0 => AND_4:AND3.D
x0 => AND_4:AND4.D
Y <= OR_4:OR1.Y


|DUT|Fibonacci_detector:add_instance|INVERTER:NOT1
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|Fibonacci_detector:add_instance|INVERTER:NOT2
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|Fibonacci_detector:add_instance|INVERTER:NOT3
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|Fibonacci_detector:add_instance|INVERTER:NOT4
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|Fibonacci_detector:add_instance|INVERTER:NOT5
A => Y.DATAIN
Y <= A.DB_MAX_OUTPUT_PORT_TYPE


|DUT|Fibonacci_detector:add_instance|AND_3:AND1
A => Y.IN0
B => Y.IN1
C => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|Fibonacci_detector:add_instance|AND_4:AND2
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|Fibonacci_detector:add_instance|AND_4:AND3
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|Fibonacci_detector:add_instance|AND_4:AND4
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


|DUT|Fibonacci_detector:add_instance|OR_4:OR1
A => Y.IN0
B => Y.IN1
C => Y.IN1
D => Y.IN1
Y <= Y.DB_MAX_OUTPUT_PORT_TYPE


